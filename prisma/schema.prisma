// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Projeto {
  id                 String    @id @default(uuid())
  nome               String    @db.VarChar(150)
  descricao          String
  id_criador         String
  id_lider           String
  email_lider        String?
  emailParticipantes String[]
  url                String
  dataInicio         DateTime  @default(now())
  deletado           Boolean   @default(false)
  Tarefas            Tarefa[]
  Colunas            Coluna[]
  Criado             Usuario   @relation(name: "Criador", fields: [id_criador], references: [id])
  Lider              Usuario   @relation(name: "Lider", fields: [id_lider], references: [id])
  Participantes      Usuario[] @relation(name: "Participantes")
}

model Tarefa {
  id                     String    @id @default(uuid())
  titulo                 String    @db.VarChar(150)
  descricao              String
  caso_teste             String
  prioridade             String
  complexidade           String
  status                 String
  usuario_autor_id       String
  usuario_responsavel_id String
  projeto_id             String?
  dataCriacao            DateTime  @default(now())
  dataInicio             DateTime?
  dataFim                DateTime?
  deletado               Boolean   @default(false)
  Autor                  Usuario   @relation(name: "AutorTarefa", fields: [usuario_autor_id], references: [id])
  Responsavel            Usuario   @relation(name: "ResponsavelTarefa", fields: [usuario_responsavel_id], references: [id])
  Projeto                Projeto?  @relation(fields: [projeto_id], references: [id])
  coluna_id              String?   // Relacionamento com coluna
  Coluna                 Coluna?   @relation(fields: [coluna_id], references: [id])
}

model Coluna {
  id                     String    @id @default(uuid())
  titulo                 String    @db.VarChar(150)
  posicao                Int
  projeto_id             String
  Projeto                Projeto   @relation(fields: [projeto_id], references: [id])
  Tarefas                Tarefa[]
}

model Usuario {
  id                  String    @id @default(uuid())
  nome                String    @db.VarChar(150)
  email               String    @unique
  senha               String
  cargo               Cargo
  deletado            Boolean   @default(false)
  tarefasCriadas      Tarefa[]  @relation(name: "AutorTarefa")
  tarefasResponsavel  Tarefa[]  @relation(name: "ResponsavelTarefa")
  projetoLider        Projeto[] @relation(name: "Criador")
  projetoResponsavel  Projeto[] @relation(name: "Lider")
  projetoParticipante Projeto[] @relation(name: "Participantes")

  projetoId String?
}

enum Cargo {
  ADM
  FUNCIONARIO
}
